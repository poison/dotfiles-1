[alias]
	# List aliases.
	aliases = config --get-regexp alias

	# Shorthand for branch.
	b = branch

	# Show verbose output about branches.
	branches = branch -a

	# Shorthand for clone.
	c = clone

	# Fetch everything all remotes.
	f = fetch --all

  # Switch to a branch, creating it if necessary.
	go = "!f() { git switch -c $1 2> /dev/null || git switch $1; }; f"

	# View the SHA, description, and history graph of the latest 20 commits.
	l = log --format='%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --no-merges -n 30

	# Shorthand for merge.
	m = merge

	# Shorthand for push.
	p = push

	# Pull in remote changes for the current repository and all its submodules.
	pl = pull

	# Shorthand for remote.
	r = remote

	# Interactive rebase with the given number of latest commits.
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Show verbose output about remotes.
	remotes = remote --verbose

	# View the current working tree status using the short format.
	s = status --short --branch

	# List contributors with number of commits.
	sl = shortlog --summary --numbered

	# Show verbose output about tags.
	tags = tag --list

[apply]
	# Detect whitespace errors when applying a patch.
	whitespace = fix

[color]
	# Use colors in Git commands that are capable of colored output when outputting to the terminal.
	ui = auto

[color "branch"]
	# Highlight current. Yellow local branches; Green remotes.
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	# Yellow meta; Magenta line info; Red for deleltions; Green for additions.
	frag = magenta
	meta = yellow
	new = green
	old = red

[color "status"]
	# Changed files are yellow. Staged files are green. New (untracked) files are cyan.
	# Headers are gray (white dimmed). Branch is always green even in headers.
	added = green
	branch = green
	changed = yellow
	header = white dim
	untracked = cyan

[commit]
	# Sign all commits with GPG.
	gpgsign = true

[core]
	# Don't ignore case sensitive on filenames.
	ignoreCase = false

	# Global `.gitignore` and `.gitattributes`.
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Make `git rebase` safer on macOS.
	trustctime = false

	# Treat spaces before tabs and all kinds of trailing whitespace as an error.
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

  # Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true

[diff]
	# Use more time to create better diffs.
	algorithm = patience

	# Diff will detect both renames and copies.
	renames = copies

[merge]
	# Include summaries of merged commits in newly created merge commit messages.
	log = true

[push]
	# Git simple branching method only your current branch will be pushed.
	default = simple

  # Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true

[user]
	# Name used in commit messages.
	name = Vincent Klaiber

	# Email used in commit messages.
	email = vincent@doubledip.se

	# Public GPG signing key id.
	signingkey = 66C8C908EAE057A4

[github]
	# GitHub username for command-line tools.
	user = vinkla

[credential]
	# Use macOS keychain to store HTTP passwords.
	helper = osxkeychain

[protocol]
	version = 2
